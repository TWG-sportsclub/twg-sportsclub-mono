---
# MegaLinter GitHub Action configuration file
# More info at https://megalinter.io
name: MegaLinter
# Trigger mega-linter at every push. Action will also be visible from
# Pull Requests to main
on:
  # Comment this line to trigger action only on pull-requests
  # (not recommended if you don't pay for GH Actions)
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
permissions: read-all
# Comment env block if you do not want to apply fixes
env:
  # Apply linter fixes configuration
  #
  # When active, APPLY_FIXES must also be defined as environment variable
  # (in github/workflows/mega-linter.yml or other CI tool)
  APPLY_FIXES: all

  # Decide which event triggers application of fixes in a commit or a PR
  # (pull_request, push, all)
  APPLY_FIXES_EVENT: all

  # If APPLY_FIXES is used, defines if the fixes are directly committed (commit)
  # or posted in a PR (pull_request)
  APPLY_FIXES_MODE: commit
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    env:
      MEGALINTER_VERSION: a7a0163b6c8ff7474a283d99a706e27483ddd80f
      MEGALINTER_IMAGE: oxsecurity/megalinter
      IMAGE_TAR_PATH: megalinter_image.tar
    # Give the default GITHUB_TOKEN write permission to commit and push, comment
    # issues, and post new Pull Requests; remove the ones you do not need
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push, comment issues & post new PR
      # Remove the ones you do not need
      contents: write
      issues: write
      pull-requests: write
    steps:
      # Git Checkout
      - name: Checkout Code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          set-safe-directory: "/github/workspace/.git"
          fetch-depth: 0

      - name: Set ownership
        run: |
          chown -R $(id -u):$(id -g) $PWD

      - name: Cache MegaLinter Docker image
        id: image-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: /tmp/docker-images.tar
          key: ${{ runner.os }}-megalinter-${{ env.MEGALINTER_VERSION }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          docker pull docker pull oxsecurity/megalinter:v7.10.0
          docker save -o /tmp/docker-images.tar alpine

      - if: steps.image-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i /tmp/docker-images.tar

      # - name: Load MegaLinter Docker image from cache
      #   run: |
      #     if [ -f "/tmp/docker-images.tar" ]; then
      #       docker load -i /tmp/docker-images.tar
      #     fi
      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/docker-images.tar
      #     mv /tmp/docker-images-new.tar /tmp/docker-images.tar
      # MegaLinter
      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter@a7a0163b6c8ff7474a283d99a706e27483ddd80f
        with:
          args: "APPLY_FIXES=${{ env.APPLY_FIXES }}"
        env:
          MEGALINTER_VERSION: ${{ env.MEGALINTER_VERSION }}
          GITHUB_TOKEN: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true

      - name: Save MegaLinter Docker image to cache
        run: |
          docker save  oxsecurity/megalinter:${{ env.MEGALINTER_VERSION }} > /tmp/docker-images.tar
      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      # Create pull request if applicable
      # (for now works only on PR from same repository, not from forks)
      - name: Create Pull Request with applied fixes
        uses: peter-evans/create-pull-request@70a41aba780001da0a30141984ae2a0c95d8704e
        id: cpr
        if: steps.ml.outputs.has_updated_sources == 1 && ( env.APPLY_FIXES_EVENT
          == 'all' || env.APPLY_FIXES_EVENT == github.event_name ) &&
          env.APPLY_FIXES_MODE == 'pull_request' && ( github.event_name ==
          'push' || github.event.pull_request.head.repo.full_name ==
          github.repository ) && !contains(github.event.head_commit.message,
          'skip fix')
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linters automatic fixes"
          title: "[MegaLinter] Apply linters automatic fixes"
          labels: bot

      - name: Create PR output
        if: >-
          steps.ml.outputs.has_updated_sources == 1 && (
            env.APPLY_FIXES_EVENT == 'all' ||
            env.APPLY_FIXES_EVENT == github.event_name
          ) && env.APPLY_FIXES_MODE == 'pull_request' && (
            github.event_name == 'push' ||
            github.event.pull_request.head.repo.full_name == github.repository
          ) && !contains(github.event.head_commit.message, 'skip fix')
        run: |
          echo "PR Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "PR URL - ${{ steps.cpr.outputs.pull-request-url }}"

      # Push new commit if applicable
      # (for now works only on PR from same repository, not from forks)
      - name: Prepare commit
        if: steps.ml.outputs.has_updated_sources == 1 && ( env.APPLY_FIXES_EVENT
          == 'all' || env.APPLY_FIXES_EVENT == github.event_name ) &&
          env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' &&
          ( github.event_name == 'push' ||
          github.event.pull_request.head.repo.full_name == github.repository )
          && !contains(github.event.head_commit.message, 'skip fix')
        run: sudo chown -Rc $UID .git/

      - name: Commit and push applied linter fixes
        uses: stefanzweifel/git-auto-commit-action@8756aa072ef5b4a080af5dc8fef36c5d586e521d
        if: steps.ml.outputs.has_updated_sources == 1 && ( env.APPLY_FIXES_EVENT
          == 'all' || env.APPLY_FIXES_EVENT == github.event_name ) &&
          env.APPLY_FIXES_MODE == 'commit' && github.ref != 'refs/heads/main' &&
          ( github.event_name == 'push' ||
          github.event.pull_request.head.repo.full_name == github.repository )
          && !contains(github.event.head_commit.message, 'skip fix')
        with:
          branch: >-
            ${{
              github.event.pull_request.head.ref ||
              github.head_ref ||
              github.ref
            }}
          commit_message: "[MegaLinter] Apply linters fixes"
          commit_user_name: megalinter-bot
          commit_user_email: read.musik@gmail.com

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@54bcd8715eee62d40e33596ef5e8f0f48dbbccab
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: TWG-sportsclub/twg-sportsclub-mono
          verbose: true
